#include "DDS.h"

#define DDS_PGMSPACE

#ifdef DDS_PGMSPACE
#include "avr/pgmspace.h"
#endif

// #include "avr/math.h"
#include <math.h>

#define REFCLK (double)31372.549

#ifdef DDS_PGMSPACE
PROGMEM prog_uint16_t wavetable[]  = {
#else
uint16_t wavetable[] = {
#endif
  0, 0, 0, 0, 0, 0, 1, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 15, 17, 18, 20, 22, 24, 26, 28, 30, 32, 34, 37, 39, 41, 44, 47, 49, 52, 55, 58, 61, 64, 67, 71, 74, 77, 81, 84, 88, 92, 95, 99, 103, 107, 111, 115, 119, 124, 128, 133, 137, 142, 146, 151, 156, 161, 165, 170, 176, 181, 186, 191, 197, 202, 207, 213, 219, 224, 230, 236, 242, 248, 254, 260, 266, 272, 279, 285, 291, 298, 305, 311, 318, 325, 331, 338, 345, 352, 359, 367, 374, 381, 388, 396, 403, 411, 418, 426, 434, 442, 449, 457, 465, 473, 481, 489, 498, 506, 514, 523, 531, 540, 548, 557, 565, 574, 583, 592, 600, 609, 618, 627, 636, 646, 655, 664, 673, 683, 692, 702, 711, 721, 730, 740, 750, 759, 769, 779, 789, 799, 809, 819, 829, 839, 849, 860, 870, 880, 890, 901, 911, 922, 932, 943, 954, 964, 975, 986, 996, 1007, 1018, 1029, 1040, 1051, 1062, 1073, 1084, 1095, 1106, 1117, 1129, 1140, 1151, 1163, 1174, 1185, 1197, 1208, 1220, 1231, 1243, 1254, 1266, 1278, 1289, 1301, 1313, 1324, 1336, 1348, 1360, 1372, 1384, 1396, 1407, 1419, 1431, 1443, 1455, 1467, 1480, 1492, 1504, 1516, 1528, 1540, 1552, 1565, 1577, 1589, 1601, 1614, 1626, 1638, 1651, 1663, 1675, 1688, 1700, 1713, 1725, 1737, 1750, 1762, 1775, 1787, 1800, 1812, 1825, 1837, 1850, 1862, 1875, 1887, 1900, 1912, 1925, 1937, 1950, 1963, 1975, 1988, 2000, 2013, 2025, 2038, 2051, 2063, 2076, 2088, 2101, 2114, 2126, 2139, 2151, 2164, 2176, 2189, 2201, 2214, 2227, 2239, 2252, 2264, 2277, 2289, 2302, 2314, 2327, 2339, 2351, 2364, 2376, 2389, 2401, 2413, 2426, 2438, 2451, 2463, 2475, 2487, 2500, 2512, 2524, 2536, 2549, 2561, 2573, 2585, 2597, 2609, 2621, 2634, 2646, 2658, 2670, 2682, 2694, 2705, 2717, 2729, 2741, 2753, 2765, 2776, 2788, 2800, 2812, 2823, 2835, 2846, 2858, 2870, 2881, 2893, 2904, 2915, 2927, 2938, 2949, 2961, 2972, 2983, 2994, 3005, 3017, 3028, 3039, 3050, 3061, 3072, 3082, 3093, 3104, 3115, 3125, 3136, 3147, 3157, 3168, 3178, 3189, 3199, 3210, 3220, 3230, 3241, 3251, 3261, 3271, 3281, 3291, 3301, 3311, 3321, 3331, 3340, 3350, 3360, 3370, 3379, 3389, 3398, 3408, 3417, 3426, 3436, 3445, 3454, 3463, 3472, 3481, 3490, 3499, 3508, 3517, 3525, 3534, 3543, 3551, 3560, 3568, 3577, 3585, 3593, 3601, 3610, 3618, 3626, 3634, 3642, 3650, 3657, 3665, 3673, 3680, 3688, 3695, 3703, 3710, 3718, 3725, 3732, 3739, 3746, 3753, 3760, 3767, 3774, 3781, 3787, 3794, 3800, 3807, 3813, 3820, 3826, 3832, 3838, 3844, 3850, 3856, 3862, 3868, 3874, 3879, 3885, 3890, 3896, 3901, 3906, 3912, 3917, 3922, 3927, 3932, 3937, 3942, 3946, 3951, 3956, 3960, 3965, 3969, 3973, 3978, 3982, 3986, 3990, 3994, 3998, 4002, 4005, 4009, 4013, 4016, 4019, 4023, 4026, 4029, 4032, 4036, 4039, 4041, 4044, 4047, 4050, 4052, 4055, 4057, 4060, 4062, 4064, 4066, 4068, 4070, 4072, 4074, 4076, 4078, 4079, 4081, 4082, 4084, 4085, 4086, 4087, 4088, 4089, 4090, 4091, 4092, 4093, 4093, 4094, 4094, 4095, 4095, 4095, 4095, 4095, 4095, 4095, 4095, 4095, 4095, 4094, 4094, 4093, 4093, 4092, 4091, 4090, 4089, 4088, 4087, 4086, 4085, 4084, 4082, 4081, 4079, 4078, 4076, 4074, 4072, 4070, 4068, 4066, 4064, 4062, 4060, 4057, 4055, 4052, 4050, 4047, 4044, 4041, 4039, 4036, 4032, 4029, 4026, 4023, 4019, 4016, 4013, 4009, 4005, 4002, 3998, 3994, 3990, 3986, 3982, 3978, 3973, 3969, 3965, 3960, 3956, 3951, 3946, 3942, 3937, 3932, 3927, 3922, 3917, 3912, 3906, 3901, 3896, 3890, 3885, 3879, 3874, 3868, 3862, 3856, 3850, 3844, 3838, 3832, 3826, 3820, 3813, 3807, 3800, 3794, 3787, 3781, 3774, 3767, 3760, 3753, 3746, 3739, 3732, 3725, 3718, 3710, 3703, 3695, 3688, 3680, 3673, 3665, 3657, 3650, 3642, 3634, 3626, 3618, 3610, 3601, 3593, 3585, 3577, 3568, 3560, 3551, 3543, 3534, 3525, 3517, 3508, 3499, 3490, 3481, 3472, 3463, 3454, 3445, 3436, 3426, 3417, 3408, 3398, 3389, 3379, 3370, 3360, 3350, 3340, 3331, 3321, 3311, 3301, 3291, 3281, 3271, 3261, 3251, 3241, 3230, 3220, 3210, 3199, 3189, 3178, 3168, 3157, 3147, 3136, 3125, 3115, 3104, 3093, 3082, 3071, 3061, 3050, 3039, 3028, 3017, 3005, 2994, 2983, 2972, 2961, 2949, 2938, 2927, 2915, 2904, 2893, 2881, 2870, 2858, 2846, 2835, 2823, 2812, 2800, 2788, 2776, 2765, 2753, 2741, 2729, 2717, 2705, 2694, 2682, 2670, 2658, 2646, 2634, 2621, 2609, 2597, 2585, 2573, 2561, 2549, 2536, 2524, 2512, 2500, 2487, 2475, 2463, 2451, 2438, 2426, 2413, 2401, 2389, 2376, 2364, 2351, 2339, 2327, 2314, 2302, 2289, 2277, 2264, 2252, 2239, 2227, 2214, 2201, 2189, 2176, 2164, 2151, 2139, 2126, 2114, 2101, 2088, 2076, 2063, 2051, 2038, 2025, 2013, 2000, 1988, 1975, 1963, 1950, 1937, 1925, 1912, 1900, 1887, 1875, 1862, 1850, 1837, 1825, 1812, 1800, 1787, 1775, 1762, 1750, 1737, 1725, 1713, 1700, 1688, 1675, 1663, 1651, 1638, 1626, 1614, 1601, 1589, 1577, 1565, 1552, 1540, 1528, 1516, 1504, 1492, 1480, 1467, 1455, 1443, 1431, 1419, 1407, 1396, 1384, 1372, 1360, 1348, 1336, 1324, 1313, 1301, 1289, 1278, 1266, 1254, 1243, 1231, 1220, 1208, 1197, 1185, 1174, 1163, 1151, 1140, 1129, 1117, 1106, 1095, 1084, 1073, 1062, 1051, 1040, 1029, 1018, 1007, 996, 986, 975, 964, 954, 943, 932, 922, 911, 901, 890, 880, 870, 860, 849, 839, 829, 819, 809, 799, 789, 779, 769, 759, 750, 740, 730, 721, 711, 702, 692, 683, 673, 664, 655, 646, 636, 627, 618, 609, 600, 592, 583, 574, 565, 557, 548, 540, 531, 523, 514, 506, 498, 489, 481, 473, 465, 457, 449, 442, 434, 426, 418, 411, 403, 396, 388, 381, 374, 367, 359, 352, 345, 338, 331, 325, 318, 311, 305, 298, 291, 285, 279, 272, 266, 260, 254, 248, 242, 236, 230, 224, 219, 213, 207, 202, 197, 191, 186, 181, 176, 170, 165, 161, 156, 151, 146, 142, 137, 133, 128, 124, 119, 115, 111, 107, 103, 99, 95, 92, 88, 84, 81, 77, 74, 71, 67, 64, 61, 58, 55, 52, 49, 47, 44, 41, 39, 37, 34, 32, 30, 28, 26, 24, 22, 20, 18, 17, 15, 13, 12, 11, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 1, 0, 0, 0, 0, 0, 0
  };

void DDS::init(){
  setFrequency(1000.0);
}

void DDS::setFrequency(double freq){
  tuning = (uint32_t)(pow(2, 32)*freq/REFCLK); // calulate DDS new tuning word
//   tword_m = (unsigned long)(pow(2,32)*freq/REFCLK); // calulate DDS new tuning word
}

uint16_t DDS::getValue(){
  accumulator += tuning; // soft DDS, phase accu with 32 bits
  uint16_t icnt = accumulator >> 22;     // use upper bits of phase accumulator
//   uint8_t icnt = accumulator >> 8;     // use upper 8 bits for phase accu as frequency
  // read value from wave table
#ifdef DDS_PGMSPACE
  return pgm_read_word_near(wavetable + icnt);
#else
  return wavetable[icnt];
#endif
}
